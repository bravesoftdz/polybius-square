unit Batch;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
	Dialogs, StdCtrls, ComCtrls,stdActns, FileCtrl;

type
	TBatchForm = class(TForm)
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    CheckBox6: TCheckBox;
    ComboBox2: TComboBox;
    OpenDialog1: TOpenDialog;
    Button6: TButton;
    Button7: TButton;
    PageControl2: TPageControl;
    TabSheet2: TTabSheet;
    GroupBox1: TGroupBox;
    ListBox1: TListBox;
    Button1: TButton;
    Button3: TButton;
    Button4: TButton;
    ListBox2: TListBox;
    Button2: TButton;
    GroupBox2: TGroupBox;
    Label1: TLabel;
    Label2: TLabel;
    Edit1: TEdit;
    Button5: TButton;
    CheckBox1: TCheckBox;
    CheckBox2: TCheckBox;
    CheckBox3: TCheckBox;
    CheckBox4: TCheckBox;
    CheckBox5: TCheckBox;
    ComboBox1: TComboBox;
    CheckBox7: TCheckBox;
    TabSheet3: TTabSheet;
    Edit2: TEdit;
    Label3: TLabel;
    Button8: TButton;
    Label4: TLabel;
    Edit3: TEdit;
    Button9: TButton;
    ListBox3: TListBox;
    CheckBox8: TCheckBox;
    SaveDialog1: TSaveDialog;
    TabSheet4: TTabSheet;
    ListBox4: TListBox;
    GroupBox3: TGroupBox;
    Label5: TLabel;
    CheckBox9: TCheckBox;
    CheckBox10: TCheckBox;
    procedure ListBox4Click(Sender: TObject);
    procedure ListBox3Click(Sender: TObject);
    procedure Button9Click(Sender: TObject);
    procedure Button8Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure CheckBox4Click(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure ListBox2Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Button6Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure Button7Click(Sender: TObject);
    procedure CheckBox5Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
		procedure Button1Click(Sender: TObject);
	private
  	Form_Activated: boolean;
		procedure FileSearch(const dirName:string);
	public
		
	end;

var BatchForm: TBatchForm;

implementation

uses Unit38, Unit39, TABPGDLG, encoder, Threads, Functions;

{$R *.dfm}

procedure TBatchForm.Button1Click(Sender: TObject);
begin
opendialog1.Options := [ofHideReadOnly, ofPathMustExist, ofFileMustExist,
												ofExtensionDifferent, ofEnableSizing, ofDontAddToRecent,
												ofAllowMultiSelect];
if opendialog1.Execute(handle) then
	listbox1.Items.AddStrings(opendialog1.Files);
end;

procedure TBatchForm.Button2Click(Sender: TObject);
var FDir :string;
begin
	{BrowseForFolder := TBrowseForFolder.Create(nil);
	with BrowseForFolder do try
		RootDir := 'C:\';
		if Execute then
			FileSearch(Folder);
	finally
		Free;
	end; }
	if SelectDirectory('Select Directory', ExtractFileDrive(FDir), FDir,
						 [sdNewUI]) then
		try
			FileSearch(FDir);
		finally

		end;
end;

procedure TBatchForm.Button3Click(Sender: TObject);
begin
	listbox1.DeleteSelected;
end;

procedure TBatchForm.Button4Click(Sender: TObject);
begin
	listbox1.Clear;
end;

procedure TBatchForm.Button5Click(Sender: TObject);
var FDir	:	string;
begin
	if SelectDirectory('Select Directory', ExtractFileDrive(FDir), FDir,
						 [sdNewUI,sdNewFolder]) then
		try
			Edit1.Text := IncludeTrailingBackSlash(FDir);
		finally

		end;
end;

procedure TBatchForm.Button6Click(Sender: TObject);
var
keyPtr: Pkey;
keyPtr2:Pkey2;
i: byte;
begin
maskcollector;
case pageControl1.TabIndex of
0: begin
		if listbox1.Items.Count = 0 then
		begin
			messageDlg('Не выбрано ни одного файла!', mtWarning, [mbOK], 0);
			EXIT;
		end;
		if ((not DirectoryExists(Edit1.Text)) and (not checkbox5.Checked)) then
		begin
			messageDlg( 'Путь вывода не существует!', mtWarning, [mbOK], 0);
			EXIT;
		end;
		if ((listbox2.ItemIndex = 2) or (listbox2.ItemIndex = 3)) then begin
			if length(table2) <= 0 then
			begin
				messageDlg( 'Двумерный ключ не загружен!', mtWarning, [mbOK], 0);
				EXIT;
			end else
				if not pagesdlg.checkbox5.checked then
					if volidate(@table2,true) = '1' then
						if messageBox(
													handle,
													 PChar('Ключ повреждён! Продолжить?'),
													PChar('Внимай!'),
													MB_ICONWARNING+
													MB_YESNO
													) = 7 then EXIT;
		end else
			if ((listbox2.ItemIndex = 0) or (listbox2.ItemIndex = 1)) then begin
				if not pagesdlg.checkbox5.checked then
					if volidate(@table) <> '' then
						if messageBox(
													handle,
													 PChar('Ключ повреждён! Продолжить?'),
													PChar('Внимай!'),
													MB_ICONWARNING+
													MB_YESNO
													) = 7 then EXIT;
			end;

		if binary_mode then
			form38.Cleanup_form;
		Threads.run('batch');
	end;
1: begin
		if not FileExists(Edit2.text) then
		begin
				messageDlg('Файл не существует', mtWarning, [mbOK], 0);
				EXIT;
		end;
		if not DirectoryExists(ExtractFilePath(Edit3.Text)) then
    	begin
				messageDlg('Путь вывода не существует!', mtWarning, [mbOK], 0);
				EXIT;
			end;
		if ((listbox3.ItemIndex = 2) or (listbox3.ItemIndex = 3)) then begin
			if length(table2) <= 0 then
			begin
				messageDlg( 'Двумерный ключ не загружен!', mtWarning, [mbOK], 0);
				EXIT;
			end else
				if not pagesdlg.checkbox5.checked then
					if volidate(@table2,true) = '1' then
						if messageBox(
													handle,
													 PChar('Ключ повреждён! Продолжить?'),
													PChar('Внимай!'),
													MB_ICONWARNING+
													MB_YESNO
													) = 7 then EXIT;
		end else
			if ((listbox3.ItemIndex = 0) or (listbox3.ItemIndex = 1)) then begin
				if not pagesdlg.checkbox5.checked then
					if volidate(@table) <> '' then
						if messageBox(
													handle,
													 PChar('Ключ повреждён! Продолжить?'),
													PChar('Внимай!'),
													MB_ICONWARNING+
													MB_YESNO
													) = 7 then EXIT;
			end;
		if binary_mode then
			form38.Cleanup_form;
		Threads.run('large_file');
	end;
2: begin
		if (binary_data = '') and (listbox4.ItemIndex <> 2) then
    begin
			messageDlg('Файл не загружен', mtWarning, [mbOK], 0);
			EXIT;
		end;
		if ((listbox4.ItemIndex = 0) or (listbox4.ItemIndex = 1)) then begin
			if length(table2) <= 0 then
			begin
				messageDlg( 'Двумерный ключ не загружен!', mtWarning, [mbOK], 0);
				EXIT;
			end else
				if not pagesdlg.checkbox5.checked then
					if volidate(@table2,true) = '1' then
						if messageBox(
													handle,
													 PChar('Ключ повреждён! Продолжить?'),
													PChar('Внимай!'),
													MB_ICONWARNING+
													MB_YESNO
													) = 7 then EXIT;
		end;
		case listbox4.ItemIndex of
			0:	if SaveDialog1.Execute then
							Threads.run('multifart', SaveDialog1.FileName);
			1:	if SaveDialog1.Execute then
							Threads.run('warp', SaveDialog1.FileName);
			2:	begin
						form39.lock;
						if length(table2) > 0 then begin
							keyPtr2 := @table2;
							invert(keyptr2);
							for I := 0 to 255 do
								edits_array[i].Text := chr(table2[form39.trackbar1.position][i]);
						end else begin
							maskcollector;
							keyptr := @table;
							invert(keyptr);
							for I := 0 to 255 do
								edits_array[i].Text := chr(table[i]);
						end;
						form39.unlock;
					end;
		end;
end;
end;

end;

procedure TBatchForm.Button7Click(Sender: TObject);
begin
	Close;
end;

procedure TBatchForm.Button8Click(Sender: TObject);
begin
opendialog1.Options := [ofHideReadOnly, ofPathMustExist, ofFileMustExist,
												ofExtensionDifferent, ofEnableSizing, ofDontAddToRecent];
if opendialog1.Execute(handle) then
	if FileExists(opendialog1.filename) then
		Edit2.Text := opendialog1.FileName;
end;

procedure TBatchForm.Button9Click(Sender: TObject);
begin
if SaveDialog1.Execute(handle) then
	Edit3.Text := SaveDialog1.FileName;
end;

procedure TBatchForm.CheckBox4Click(Sender: TObject);
var FileName,TopDir: String;
begin
if checkbox4.Checked then begin
TopDir := ExtractTopLevelDir(batchForm.ListBox1.Items);
showMessage(TopDir);
FileName := IncludeTrailingBackSlash(batchForm.Edit1.Text) +
						StringReplace(FileName,IncludeTrailingBackSlash(TopDir),'',[])+ExtractFileName(batchForm.ListBox1.Items[0]);
showMessage(FileName);

end;
end;

procedure TBatchForm.CheckBox5Click(Sender: TObject);
begin
CheckBox4.Enabled := not CheckBox5.Checked;
CheckBox1.Enabled := not CheckBox5.Checked;
Edit1.Enabled 		:= not CheckBox5.Checked;
Button5.Enabled 	:= not CheckBox5.Checked;
ComboBox1.Enabled	:= not CheckBox5.Checked;
end;

procedure TBatchForm.FileSearch(const dirName:string);
var
	searchResult: TSearchRec;
begin
  if FindFirst(dirName+'\*', faAnyFile, searchResult)=0 then begin
    try
      repeat
				if (searchResult.Attr and faDirectory)=0 then begin
						listbox1.Items.Append(IncludeTrailingBackSlash(dirName)+searchResult.Name);
        end else if (searchResult.Name<>'.') and (searchResult.Name<>'..') then begin
          FileSearch(IncludeTrailingBackSlash(dirName)+searchResult.Name);
        end;
      until FindNext(searchResult)<>0
    finally
      FindClose(searchResult);
    end;
  end;
end;

procedure TBatchForm.FormActivate(Sender: TObject);
begin
if not Form_Activated then
begin
	listbox2.ItemIndex := 0;
	if pagesdlg.form_activated then
		if pagesdlg.CheckBox6.Checked then
			Edit1.Text := pagesdlg.Edit3.Text;
	Form_Activated := true;
end;
end;

procedure TBatchForm.FormClose(Sender: TObject; var Action: TCloseAction);
begin
form38.Enabled:=true;
form39.Enabled:=true;
end;

procedure TBatchForm.FormCreate(Sender: TObject);
begin
Form_Activated:=false;
end;

procedure TBatchForm.FormShow(Sender: TObject);
begin
form38.Enabled:=false;
form39.Enabled:=false;
end;

procedure TBatchForm.ListBox2Click(Sender: TObject);
begin
if listbox2.ItemIndex = 4 then
	checkbox7.Visible := true
else
	checkbox7.Visible := false;
end;

procedure TBatchForm.ListBox3Click(Sender: TObject);
begin
if listbox3.ItemIndex = 4 then begin
	checkbox8.Visible := true;
	if (Edit2.Text <> '') and (Edit3.Text = '') then
		Edit3.Text := Edit2.Text;
end
else
	checkbox8.Visible := false;
end;

procedure TBatchForm.ListBox4Click(Sender: TObject);
begin
case listbox4.ItemIndex of
	0:	label5.Caption := '1-мерное шифрование/дешифрование каждой частью двумерного ключа.' +
												' Результаты сохраняются в отдельные файлы.';
	1:	label5.caption := 'Шифрует файл двумерным ключом, после чего' +
												'размер ключа уменьшается на 1. Результаты' +
												' сохраняются в отдельные файлы.';
	2:  label5.caption := 'Дешифрует ключ самим ключом.';
end;
if listbox4.ItemIndex = 1 then
	checkBox10.Enabled := true
else
	checkBox10.Enabled := false;
if  (listbox4.ItemIndex = 0) or
		(listbox4.ItemIndex = 1) then
	checkbox9.Enabled := true
else
	checkbox9.Enabled := false;
end;

end.
