unit Batch;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
	Dialogs, StdCtrls, ComCtrls,stdActns, FileCtrl;

type
	TBatchForm = class(TForm)
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    CheckBox6: TCheckBox;
    ComboBox2: TComboBox;
    OpenDialog1: TOpenDialog;
    Button6: TButton;
    Button7: TButton;
    PageControl2: TPageControl;
    TabSheet2: TTabSheet;
    GroupBox1: TGroupBox;
    ListBox1: TListBox;
    Button1: TButton;
    Button3: TButton;
    Button4: TButton;
    ListBox2: TListBox;
    Button2: TButton;
    GroupBox2: TGroupBox;
    Label1: TLabel;
    Label2: TLabel;
    Edit1: TEdit;
    Button5: TButton;
    CheckBox1: TCheckBox;
    CheckBox2: TCheckBox;
    CheckBox3: TCheckBox;
    CheckBox4: TCheckBox;
    CheckBox5: TCheckBox;
    ComboBox1: TComboBox;
    CheckBox7: TCheckBox;
    TabSheet3: TTabSheet;
    Edit2: TEdit;
    Label3: TLabel;
    Button8: TButton;
    Label4: TLabel;
    Edit3: TEdit;
    Button9: TButton;
    ListBox3: TListBox;
    CheckBox8: TCheckBox;
    SaveDialog1: TSaveDialog;
    procedure Button8Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure CheckBox4Click(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure ListBox2Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Button6Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure Button7Click(Sender: TObject);
    procedure CheckBox5Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
		procedure Button1Click(Sender: TObject);
	private
  	Form_Activated: boolean;
		procedure FileSearch(const dirName:string);
	public
		
	end;

var BatchForm: TBatchForm;

implementation

uses Unit38, Unit39, TABPGDLG, encoder, Threads, Functions;

{$R *.dfm}

procedure TBatchForm.Button1Click(Sender: TObject);
begin
if opendialog1.Execute() then
	listbox1.Items.AddStrings(opendialog1.Files);
end;

procedure TBatchForm.Button2Click(Sender: TObject);
var FDir :string;
begin
	{BrowseForFolder := TBrowseForFolder.Create(nil);
	with BrowseForFolder do try
		RootDir := 'C:\';
		if Execute then
			FileSearch(Folder);
	finally
		Free;
	end; }
	if SelectDirectory('Select Directory', ExtractFileDrive(FDir), FDir,
						 [sdNewUI]) then
		try
			FileSearch(FDir);
		finally

		end;
end;

procedure TBatchForm.Button3Click(Sender: TObject);
begin
	listbox1.DeleteSelected;
end;

procedure TBatchForm.Button4Click(Sender: TObject);
begin
	listbox1.Clear;
end;

procedure TBatchForm.Button5Click(Sender: TObject);
var FDir	:	string;
begin
	if SelectDirectory('Select Directory', ExtractFileDrive(FDir), FDir,
						 [sdNewUI,sdNewFolder]) then
		try
			Edit1.Text := IncludeTrailingBackSlash(FDir);
		finally

		end;
end;

procedure TBatchForm.Button6Click(Sender: TObject);
begin
if listbox1.Items.Count = 0 then
begin
	messageDlg('Не выбрано ни одного файла!', mtWarning, [mbOK], 0);
	EXIT;
end;
if ((not DirectoryExists(Edit1.Text)) and (not checkbox5.Checked)) then
begin
	messageDlg( 'Путь сохранения не существует!', mtWarning, [mbOK], 0);
	EXIT;
end;
if ((listbox2.ItemIndex = 2) or (listbox2.ItemIndex = 3)) then
	if length(table2) <= 0 then
	begin
		messageDlg( 'Двумерный ключ не загружен!', mtWarning, [mbOK], 0);
		EXIT;
	end;
if binary_mode then
 form38.Cleanup_form;
Threads.run('batch');
end;

procedure TBatchForm.Button7Click(Sender: TObject);
begin
	Close;
end;

procedure TBatchForm.Button8Click(Sender: TObject);
begin
if opendialog1.Execute then
	if FileExists(filename) then
		Edit2.Text := opendialog1.FileName;
end;

procedure TBatchForm.CheckBox4Click(Sender: TObject);
var FileName,TopDir: String;
begin
if checkbox4.Checked then begin
TopDir := ExtractTopLevelDir(batchForm.ListBox1.Items);
showMessage(TopDir);
FileName := IncludeTrailingBackSlash(batchForm.Edit1.Text) +
						StringReplace(FileName,IncludeTrailingBackSlash(TopDir),'',[])+ExtractFileName(batchForm.ListBox1.Items[0]);
showMessage(FileName);

end;
end;

procedure TBatchForm.CheckBox5Click(Sender: TObject);
begin
CheckBox4.Enabled := not CheckBox5.Checked;
CheckBox1.Enabled := not CheckBox5.Checked;
Edit1.Enabled 		:= not CheckBox5.Checked;
Button5.Enabled 	:= not CheckBox5.Checked;
ComboBox1.Enabled	:= not CheckBox5.Checked;
end;

procedure TBatchForm.FileSearch(const dirName:string);
var
	searchResult: TSearchRec;
begin
  if FindFirst(dirName+'\*', faAnyFile, searchResult)=0 then begin
    try
      repeat
				if (searchResult.Attr and faDirectory)=0 then begin
						listbox1.Items.Append(IncludeTrailingBackSlash(dirName)+searchResult.Name);
        end else if (searchResult.Name<>'.') and (searchResult.Name<>'..') then begin
          FileSearch(IncludeTrailingBackSlash(dirName)+searchResult.Name);
        end;
      until FindNext(searchResult)<>0
    finally
      FindClose(searchResult);
    end;
  end;
end;

procedure TBatchForm.FormActivate(Sender: TObject);
begin
if not Form_Activated then
begin
	listbox2.ItemIndex := 0;
	if pagesdlg.form_activated then
		if pagesdlg.CheckBox6.Checked then
			Edit1.Text := pagesdlg.Edit3.Text;
	Form_Activated := true;
end;
end;

procedure TBatchForm.FormClose(Sender: TObject; var Action: TCloseAction);
begin
form38.Enabled:=true;
form39.Enabled:=true;
end;

procedure TBatchForm.FormCreate(Sender: TObject);
begin
Form_Activated:=false;
end;

procedure TBatchForm.FormShow(Sender: TObject);
begin
form38.Enabled:=false;
form39.Enabled:=false;
end;

procedure TBatchForm.ListBox2Click(Sender: TObject);
begin
if listbox2.ItemIndex = 4 then
	checkbox7.Visible := true
else
  checkbox7.Visible := false;
end;

end.
